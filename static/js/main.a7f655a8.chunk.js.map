{"version":3,"sources":["components/AppHeader.jsx","components/cards/AppLabItem.jsx","components/AppSearchBox.jsx","components/special/DevelopingCoverWarning.jsx","components/AppMain.jsx","components/AppFooter.jsx","App.jsx","serviceWorker.js","index.js","assets/logo-w.svg"],"names":["StyledHeader","styled","header","StyledContainer","div","StyledTextContainer","StyledTitle","h1","AppHeader","src","logo","alt","StyledListItem","li","StyledAnchor","a","StyledSecondTitle","h2","StyledParagraph","p","AppLabItem","props","style","backgroundColor","item","color","href","link","target","rel","title","description","StyledSearchContainer","StyledInput","input","StyledSubmit","button","AppSearchBox","placeholder","StyledDevelopingFeature","DevelopingCoverWarning","StyledMain","main","StyledList","ul","AppMain","useState","labItems","setLabItems","useEffect","fetch","then","response","json","data","map","index","key","StyledFooter","footer","AppFooter","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"wnDAMA,IAAMA,EAAeC,IAAOC,OAAV,KAQZC,EAAkBF,IAAOG,IAAV,KAwBfC,EAAsBJ,IAAOG,IAAV,KA0BnBE,EAAcL,IAAOM,GAAV,KAiCFC,EAhBG,kBAChB,kBAACR,EAAD,KACE,kBAACG,EAAD,KACE,6BACA,yBAAKM,IAAKC,IAAMC,IAAI,KACpB,kBAACN,EAAD,KACE,kBAACC,EAAD,YAEE,uCAEF,iP,mvBCxFR,IAAMM,EAAiBX,IAAOY,GAAV,KASdC,EAAeb,IAAOc,EAAV,KAYZC,EAAoBf,IAAOgB,GAAV,KAMjBC,EAAkBjB,IAAOkB,EAAV,KAmBNC,EAbI,SAACC,GAAD,OACjB,kBAACT,EAAD,CAAgBU,MAAO,CAAEC,gBAAiBF,EAAMG,KAAKC,QACnD,kBAACX,EAAD,CACEY,KAAML,EAAMG,KAAKG,KACjBC,OAAO,SACPC,IAAI,uBAEJ,kBAACb,EAAD,KAAoBK,EAAMG,KAAKM,OAC/B,kBAACZ,EAAD,KAAkBG,EAAMG,KAAKO,gB,27BCvCnC,IAAMC,EAAwB/B,IAAOG,IAAV,KAUrB6B,EAAchC,IAAOiC,MAAV,KAkBXC,EAAelC,IAAOmC,OAAV,KA8BHC,EATM,kBACnB,kBAACL,EAAD,KACE,kBAACC,EAAD,CAAaK,YAAY,yDACzB,kBAACH,EAAD,iB,wXCtDJ,IAAMI,EAA0BtC,IAAOG,IAAV,KA0BdoC,EANgB,kBAC7B,kBAACD,EAAD,KACE,+E,ioBCfJ,IAGME,EAAaxC,IAAOyC,KAAV,KAQVvC,EAAkBF,IAAOG,IAAV,KAWfuC,EAAa1C,IAAO2C,GAAV,KAmCDC,EA1BC,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,KASpB,OANAC,qBAAU,WACRC,MAnCsB,4BAoCnBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAAYM,QAC7B,IAGD,kBAACb,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,KACE,kBAACE,EAAD,KACGI,EAASQ,KAAI,SAAC/B,EAAMgC,GAAP,OACZ,kBAAC,EAAD,CAAYhC,KAAMA,EAAMiC,IAAKD,W,wmBCxDzC,IAAME,EAAezD,IAAO0D,OAAV,KAQZxD,EAAkBF,IAAOG,IAAV,KAiCNwD,EATG,kBAChB,kBAACF,EAAD,KACE,kBAAC,EAAD,KACE,6BACA,yFCzBSG,EARH,kBACV,yBAAKC,UAAU,MAAMxC,MAAO,CAACC,gBAAiB,YAC5C,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEgBwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.a7f655a8.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\n// Assets\nimport logo from './../assets/logo-w.svg';\n\nconst StyledHeader = styled.header`\n  background-color: #4f4f4f;\n  padding: 40px;\n  width: 100%;\n  display: flex;\n  overflow: hidden;\n`\n\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  max-width: 1100px;\n\n  hr {\n    border: .5px solid #efefef;\n    margin-bottom: 20px;\n\n    @media screen and (max-width: 700px) {\n      width: 100%\n    }\n  }\n\n  img {\n    width: 70px;\n  }\n\n  @media screen and (max-width: 700px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nconst StyledTextContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-top: 80px;\n\n  p {\n    color: #fff;\n    text-align: left;\n    max-width: 37%;\n    font-weight: 300;\n    font-size: 14px;\n\n    @media screen and (max-width: 700px) {\n      max-width: unset;\n      text-align: center;\n    }\n  }\n\n  @media screen and (max-width: 700px) {\n    margin-top: 40px;\n    align-items: center;\n    flex-direction: column;\n  }\n`\n\nconst StyledTitle = styled.h1`\n  color: #fff;\n  font-size: 6vw;\n  margin: 0;\n  line-height: .9;\n\n  span {\n    display: block;\n    color: #11d3b6;\n    letter-spacing: 4px;\n  }\n\n  @media screen and (max-width: 700px) {\n    font-size: 5em;\n  }\n`\n\nconst AppHeader = () => (\n  <StyledHeader>\n    <StyledContainer>\n      <hr />\n      <img src={logo} alt=''></img>\n      <StyledTextContainer>\n        <StyledTitle>\n          RCRD\n          <span>LABS</span>\n        </StyledTitle>\n        <p>Estes são projetos experimentais e podem conter falhas de responsividade, acessibilidade e qualidade de software em geral. Também podem fazer uso de tecnologias pouco suportadas sem oferecer fallback.</p>\n      </StyledTextContainer>\n    </StyledContainer>\n  </StyledHeader>\n)\n\nexport default AppHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledListItem = styled.li`\n  min-height: 50vh;\n  transition: opacity 0.3s ease;\n\n  &:hover { opacity: 0.9; }\n\n  @media screen and (max-width: 700px) { min-height: 30vh; }\n`;\n\nconst StyledAnchor = styled.a`\n  transition: padding 0.3s ease;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  padding: 20px;\n\n  &:hover { padding-bottom: 40px; }\n`;\n\nconst StyledSecondTitle = styled.h2`\n  font-size: 5vw;\n  color: #ffffff;\n  margin: 0;\n`;\n\nconst StyledParagraph = styled.p`\n  margin: 0;\n  color: #ffffff;\n  line-height: 1.5;\n`;\n\nconst AppLabItem = (props) => (\n  <StyledListItem style={{ backgroundColor: props.item.color }}>\n    <StyledAnchor\n      href={props.item.link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <StyledSecondTitle>{props.item.title}</StyledSecondTitle>\n      <StyledParagraph>{props.item.description}</StyledParagraph>\n    </StyledAnchor>\n  </StyledListItem>\n);\n\nexport default AppLabItem;\n","import React from 'react';\nimport styled from 'styled-components'\n\n// Assets\n\nconst StyledSearchContainer = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n\n  @media (max-width: 700px) {\n    flex-direction: column;\n  }\n`\n\nconst StyledInput = styled.input`\n  background-color: #F2F5F8;\n  border: none;\n  width: 100%;\n  height: 40px;\n  padding: 0 10px;\n  font-size: 16px;\n\n  ::placeholder {\n    font-weight: bold;\n    color: rgba(0, 0, 0, .4);\n\n    @media (max-width: 500px) {\n      font-size: 10px;\n    }\n  }\n`\n\nconst StyledSubmit = styled.button`\n  display: flex;\n  color: #fff;\n  font-weight: bold;\n  padding: 10px;\n  font-size: 16px;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  min-width: 50px;\n  background-color: #11d3b6;\n  cursor: pointer;\n\n  @media (max-width: 700px) {\n    height: 40px;\n    width: 100%;\n    display: block;\n    font-size: 10px;\n  }\n`\n\nconst AppSearchBox = () => (\n  <StyledSearchContainer>\n    <StyledInput placeholder=\"Procure por título ou descrição de projetos\" />\n    <StyledSubmit>\n      Buscar\n    </StyledSubmit>\n  </StyledSearchContainer>\n)\n\nexport default AppSearchBox;\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst StyledDevelopingFeature = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, .75);\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  p {\n    color: #fff;\n    opacity: .6;\n    font-weight: bold;\n    text-align: center;\n  }\n`\n\nconst DevelopingCoverWarning = () => (\n  <StyledDevelopingFeature>\n    <p>Essa funcionalidade está em desenvolvimento</p>\n  </StyledDevelopingFeature>\n)\n\nexport default DevelopingCoverWarning;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport AppLabItem from \"./cards/AppLabItem\";\nimport AppSearchBox from \"./AppSearchBox\";\n\nimport DevelopingCoverWarning from \"./special/DevelopingCoverWarning\";\n\n// Consts\nconst API_LABS_ENDPOINT = \"https://api.rcrd.me/labs\";\n\n// Styled\nconst StyledMain = styled.main`\n  max-width: 1100px;\n  margin: 0 auto;\n  display: grid;\n  grid-gap: 40px;\n  padding: 40px 0;\n`;\n\nconst StyledContainer = styled.div`\n  background-color: #fff;\n  padding: 40px;\n  box-shadow: 0 6px 15px -7px rgba(0,0,0,0.22);\n  position: relative;\n\n  @media (max-width: 500px) {\n    padding: 25px;\n  }\n`;\n\nconst StyledList = styled.ul`\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: repeat(auto-fill,minmax(250px,1fr));\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nconst AppMain = () => {\n  const [labItems, setLabItems] = useState([]);\n\n  useEffect(() => {\n    fetch(API_LABS_ENDPOINT)\n      .then((response) => response.json())\n      .then((data) => setLabItems(data));\n  }, [])\n\n  return (\n    <StyledMain>\n      <StyledContainer>\n        <DevelopingCoverWarning />\n        <AppSearchBox />\n      </StyledContainer>\n      <StyledContainer>\n        <StyledList>\n          {labItems.map((item, index) => (\n            <AppLabItem item={item} key={index} />\n          ))}\n        </StyledList>\n      </StyledContainer>\n    </StyledMain>\n  )\n};\n\nexport default AppMain;\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst StyledFooter = styled.footer`\n  background-color: #4f4f4f;\n  padding: 40px;\n  width: 100%;\n  display: flex;\n  overflow: hidden;\n`\n\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 1100px;\n\n  hr {\n    border: .5px solid #efefef;\n    margin-bottom: 20px;\n\n    @media screen and (max-width: 700px) {\n      width: 100%\n    }\n  }\n\n  p {\n    color: #fff;\n    text-align: left;\n    font-weight: 300;\n    font-size: 14px;\n\n    @media screen and (max-width: 700px) { text-align: center; }\n  }\n`\n\nconst AppFooter = () => (\n  <StyledFooter>\n    <StyledContainer>\n      <hr />\n      <p>Todo conteúdo deste site está sob licença MIT.</p>\n    </StyledContainer>\n  </StyledFooter>\n)\n\nexport default AppFooter;\n","import React from 'react';\n\nimport AppHeader from './components/AppHeader'\nimport AppMain from './components/AppMain'\nimport AppFooter from './components/AppFooter'\n\nconst App = () => (\n  <div className=\"App\" style={{backgroundColor: '#E8EAEE'}}>\n    <AppHeader />\n    <AppMain />\n    <AppFooter />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-w.204e3878.svg\";"],"sourceRoot":""}